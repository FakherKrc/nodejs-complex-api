var mongoose = require("mongoose")
var { body,validationResult } = require("express-validator");
var ApiResponse = require("../helpers/apiresponse")
var {book} =  require("../models/book.js")

function BookData(data) {
    this.id = data._id;
    this.title = data.title;
    this.description = data.description;
    this.isbn = data.isbn;
    this.createdAt = data.createdAt;
}

exports.bookList = [
    
        function(req, res){
            try{
            
                book.find({}, (err, docs) => {
                    return ApiResponse.successResponseWithData(res, "Operation Success", docs)
                });
            }catch(err){
                return ApiResponse.errorResponse(res, err);
            }
        }
    
];

exports.bookStore = [
    
        
        body("title", "Title must not be empty").isLength({min : 1}).trim(),
        body("description", "Description must not be empty").isLength({min : 1}).trim(),
        body("isbn", "Isbn must not be empty").isLength({min: 1}).trim().custom(value => {
            return book.findOne({isbn : value}).then(book => {
                if(book) {
                    return Promise.reject("isbn already taken");
                }
            })
                
        }), 
        body("*").escape(),
        (req, res) =>{
            try {

                const errors = validationResult(req);

                var onebook = new book({
                    title : req.body.title, 
                    description : req.body.description, 
                    user : req.body.user, 
                    isbn : req.body.isbn
                });

                if(!errors.isEmpty())
                {
                    return ApiResponse.validationErrorWithData(res, "Validation error", errors.array());
                }else{
                    onebook.save(function(err){

                        if(err) { return ApiResponse.errorResponse(res, err); }
                        else{
                            let bookData = new BookData(book)
                            return ApiResponse.successResponseWithData(res, "Book add Success", bookData);

                        }
                    });
                }

    
            }catch(err){

                throw new Error(err.message);
            }

        }
       


]